// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package biz

import (
	"github.com/go-kratos/kratos/v2/log"
	conf2 "uniswap-transaction/app/uniswap/job/internal/conf"
	"uniswap-transaction/app/uniswap/job/internal/data"
	"uniswap-transaction/protobuf/conf"
)

// Injectors from wire.go:

// initBizTest init bizTest.
func initBizTest(envMode conf.EnvMode, confData *conf2.Data, server *conf2.Server, logger log.Logger) (*bizTest, func(), error) {
	db := data.NewMySQL(logger, confData)
	client := data.NewRedisCmd(confData)
	bot := data.NewFeishuBot(confData)
	ethclientClient := data.NewEthereumClient(confData)
	dataData, cleanup, err := data.NewData(logger, db, client, bot, ethclientClient)
	if err != nil {
		return nil, nil, err
	}
	transaction := data.NewTransaction(dataData)
	ethereumRepo := NewEthereumRepo(logger, confData, dataData, transaction)
	bizBizTest := newBizTest(ethereumRepo)
	return bizBizTest, func() {
		cleanup()
	}, nil
}
